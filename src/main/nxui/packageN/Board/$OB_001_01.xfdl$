<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="OB_001_01" width="320" height="290" titletext="주문등록팝업" onload="OB_001_01_onload">
    <Layouts>
      <Layout height="290" width="320">
        <Static id="sta01_02" taborder="0" text="고객명" left="18" top="24" width="100" height="32" textAlign="center" font="bold 14px/normal &quot;Gulim&quot;" onclick="sta01_02_onclick"/>
        <Edit id="edt_custNm" taborder="1" left="159" top="33" width="141" height="24" inputtype="normal"/>
        <Static id="sta01_02_00" taborder="2" text="생년월일/사업자번호" left="-2" top="88" width="159" height="32" textAlign="center" font="bold 14px/normal &quot;Gulim&quot;" onclick="sta01_02_onclick"/>
        <Edit id="edt_birBizNo" taborder="3" left="159" top="92" width="141" height="24" inputtype="normal"/>
        <Static id="sta01_02_01" taborder="4" text="휴대폰번호" left="18" top="58" width="100" height="32" textAlign="center" font="bold 14px/normal &quot;Gulim&quot;" onclick="sta01_02_onclick"/>
        <Edit id="edt_phone" taborder="5" left="159" top="63" width="141" height="24" inputtype="normal"/>
        <Static id="sta01_02_02" taborder="6" text="주소" left="15" top="115" width="100" height="32" textAlign="center" font="bold 14px/normal &quot;Gulim&quot;" onclick="sta01_02_onclick"/>
        <Edit id="edt_addr" taborder="7" left="159" top="122" width="141" height="24" inputtype="normal"/>
        <Static id="sta01_02_02_00" taborder="8" text="고객 구분" left="17" top="144" width="100" height="32" textAlign="center" font="bold 14px/normal &quot;Gulim&quot;" onclick="sta01_02_onclick"/>
        <Static id="sta01_01" taborder="9" text="주문 상태" left="34" top="179" width="70" height="26" textAlign="center" font="bold 14px/normal &quot;Gulim&quot;" onclick="sta01_01_onclick"/>
        <Combo id="cbo_itemNm" taborder="10" text="선택" left="158" top="182" width="143" height="24" value="" index="-1" innerdataset="ds_itemCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택" onitemchanged="cbo_itemNm_onitemchanged"/>
        <Combo id="cbo_custGbNm" taborder="11" text="선택" left="159" top="150" width="142" height="25" value="" index="-1" innerdataset="ds_custGbCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택" onitemchanged="cbo_custGb_onitemchanged"/>
        <Button id="btn_exit" taborder="12" text="닫기" left="166" top="225" width="114" height="36" onclick="btn_exit_onclick"/>
        <Button id="btn_regOrd" taborder="13" text="주문 등록" left="30" top="225" width="114" height="36" onclick="btn_regOrd_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.OB_001_01_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//alert("onload 이벤트 실행");
	//주문 등록을 위한 고객구분, 주문상품 콤보박스 초기화
	
	//1. 고객구분 콤보박스에 출력할 데이터들을 TB_CD_MST 테이블로부터 값을 조회해오자.
	//OB_001.xfdl onload에서 만든 로직 활용하면된다. 
	this.fn_setCustGbCbo();
	
	//2. 주문 상품 리스트를 TB_ITEM 테이블로부터 조회하여 콤보박스 안의 데이터를 채워주자.
	this.fn_setItemCbo();

};

this.btn_regOrd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("주문 등록 버튼 실행");
	//1. 주문 등록을 위해 입력바든 6개의 값을 데이터셋에 담아 서버로 전송해야한다.
	//따라서 데이터 셋을 만들고 사용자가 입력한 6개의 값을 담아주자.
	this.ds_regOrd.clearData();
	this.ds_regOrd.addRow();
	this.ds_regOrd.setColumn(0, "CUST_NM", this.edt_custNm.value);
	this.ds_regOrd.setColumn(0, "PHONE", this.edt_phone.value);
	this.ds_regOrd.setColumn(0, "BIR_BIZ_NO", this.edt_birBizNo.value);
	this.ds_regOrd.setColumn(0, "ADDR", this.edt_addr.value);
	this.ds_regOrd.setColumn(0, "CUST_GBCD", this.cbo_custGbNm.value);
	this.ds_regOrd.setColumn(0, "ITEM_CD", this.cbo_itemNm.value);
	
	trace(this.ds_regOrd.getColumn(0,"CUST_NM"));
	trace(this.ds_regOrd.getColumn(0,"PHONE"));
	trace(this.ds_regOrd.getColumn(0,"BIR_BIZ_NO"));
	trace(this.ds_regOrd.getColumn(0,"ADDR"));
	trace(this.ds_regOrd.getColumn(0,"CUST_GBCD"));
	trace(this.ds_regOrd.getColumn(0,"ITEM_CD"));
	
	
	//세팅할 ds_regOrd 데이터셋을 서버로 전송해서 주문 등록을 해보자. 
	var strSvcId = "insertOrdList";     
    var strSvcUrl = "insertOrdList.do"; 
	var inData = "ds_regOrd=ds_regOrd"; 
	var outData = ""; //서버로부터 받을 값은 따로 없다. 
	var strAvg = "";                          
	var callBackFnc ="fnCallback";           
	
	this.gfnTransaction(strSvcId,
						strSvcUrl,
						inData,
						outData,
						strAvg,
						callBackFnc);     // 서버로 요청이 감.
	
};

this.btn_exit_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("닫기 실행");
	this.close();	
};

/*************************************************
* 사용자 정의 함수 
**************************************************/

this.fn_setCustGbCbo = function(){
	
	//ds_searchcombo 데이터셋을 생성하고 서버로 전달할 인자값을 추가해보자.
	this.ds_searchCustGB.clearData();   //데이터 셋을 초기화
	this.ds_searchCustGB.addRow();      //데이터 셋 값을 세팅하기 위해 1줄의 row를 추가함.
	this.ds_searchCustGB.setColumn(0, "CD_VAL", "002");   // 추가된 0번째 "CD_VAL"컬럼에 "002"을 넣자.
	
	//서버로 데이터를 전송한다. 그 전에 필요한 값들을 세팅한다.
	var strSvcId = "selectCommonCode";      //넥사크로에서 트랜잭션을 구분하기 위한 id 값. 이 id 값을 차후 fncallback(후처리) 함수에서 쓰인다.
    var strSvcUrl = "selectCommonCode.do";  //java controller에서 이 주소를 식별하여 요청을 처리한다.
	var inData = "ds_search=ds_searchCustGB";  // ds_searchCombo(위에서 만든 데이터셋- 프론트엔드)을 ds_search(서버의 맵 객체)에 넣는다.
	                                         // 서버측(.java)에도 ds_search 데이터 셋명과 반드시 동일하게 명명해야함.
	var outData = "ds_custGbCombo=ds_commonCode";  //서버로부터 값을 전달받을 데이터 셋을 세팅하는 것. 서버 데이터셋(dsCommonCode)
	var strAvg = "";                          //데이터셋이 아닌 값을 보낼때 쓰는 필드지만, 데이터 셋을 쓰는 것으로 통일하자.
	var callBackFnc ="fnCallback";            // 서버로부터 값을 받은 이후 프론트에서 이행할 작업 코드를 fnCallback 함수에서 작성한다.
	
	this.gfnTransaction(strSvcId,
						strSvcUrl,
						inData,
						outData,
						strAvg,
						callBackFnc);     // 서버로 요청이 감.
}

this.fn_setItemCbo = function(){

	var strSvcId = "selectItemList";     
    var strSvcUrl = "selectItemList.do";  
	var inData = "";   //따로 서버에 전송할 데이터가 없음. 
	                                      
	var outData = "ds_itemCombo=ds_itemCombo";   
	var strAvg = "";                        
	var callBackFnc ="fnCallback";         
	
	this.gfnTransaction(strSvcId,
						strSvcUrl,
						inData,
						outData,
						strAvg,
						callBackFnc);     // 서버로 요청이 감.
	
}

/********************************************
* CallBack Function(서버 수신 후 후처리 영역)
**********************************************/
this.fnCallback = function(svcID, errorCode, errorMsg){
	switch(svcID) {
		case "selectCommonCode":
			trace("고객구분 콤보박스 세팅 완료"); //로그
			break;
		
		case "selectItemList":
			trace("주문 상품 콤보박스 세팅 완료");
			break;
		
		case "insertOrdList":
			alert("주문 등록 완료");  
			this.close();         //팝업 종료
			break;
	}
}
]]></Script>
    <Objects>
      <Dataset id="ds_searchCustGB">
        <ColumnInfo>
          <Column id="CD_VAL" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_custGbCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_itemCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_regOrd">
        <ColumnInfo>
          <Column id="CUST_NM" type="STRING" size="256"/>
          <Column id="PHONE" type="STRING" size="256"/>
          <Column id="BIR_BIZ_NO" type="STRING" size="256"/>
          <Column id="ADDR" type="STRING" size="256"/>
          <Column id="CUST_GBCD" type="STRING" size="256"/>
          <Column id="ITEM_CD" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
